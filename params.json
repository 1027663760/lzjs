{"name":"Lzjs","tagline":"Compression by LZ algorithm in JavaScript.","body":"lzjs\r\n========\r\n\r\n[![Build Status](https://travis-ci.org/polygonplanet/lzjs.svg)](https://travis-ci.org/polygonplanet/lzjs)\r\n\r\n\r\nCompression by LZ algorithm in JavaScript.\r\n\r\nThis is useful when storing the large data in a size limited storage (e.g., localStorage, cookie etc.).\r\n\r\n## Installation\r\n\r\n### In a browser:\r\n\r\n```html\r\n<script src=\"lzjs.js\"></script>\r\n```\r\n\r\nor\r\n\r\n```html\r\n<script src=\"lzjs.min.js\"></script>\r\n```\r\n\r\nThe object named \"lzjs\" will defined in the global scope.\r\n\r\n\r\n### In Node.js:\r\n\r\n```bash\r\nnpm install lzjs\r\n```\r\n\r\n```javascript\r\nvar lzjs = require('lzjs');\r\n```\r\n\r\n## Usage\r\n\r\n* {_string_} lzjs.**compress** ( {_string_|_Buffer_} data )  \r\n  Compress data.  \r\n  @param {_string_|_Buffer_} _data_ Input data  \r\n  @return {_string_} Compressed data\r\n\r\n* {_string_} lzjs.**decompress** ( {_string_} data )  \r\n  Decompress data.  \r\n  @param {_string_} _data_ Input data  \r\n  @return {_string_} Decompressed data\r\n\r\n\r\n```javascript\r\nvar data = 'hello hello hello';\r\nvar compressed = lzjs.compress(data);\r\nconsole.log(compressed); // Outputs a compressed binary string\r\nvar decompressed = lzjs.decompress(compressed);\r\nconsole.log(decompressed === data); // true\r\n```\r\n\r\n## Demo\r\n\r\n* [Demo](http://polygonplanet.github.io/lzjs/demo/)\r\n\r\n## License\r\n\r\nMIT\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}